{"ast":null,"code":"var _jsxFileName = \"/Users/Park/Desktop/PARD/SpringBootStudy/React&Springboot3/react/src/components/comment/CommentWrite.js\",\n  _s = $RefreshSig$();\n/*\nAPI 명세서: 댓글 생성\n\nURL: /comment\n\nMethod: POST\n\nURL Params:\n  Required: BoardSeq=[integer] - 게시글의 시퀀스 번호\n\nData Params:\n  id=[string] - 사용자 ID\n  content=[string] - 댓글 내용\n  BoardSeq=[integer] - 게시글의 시퀀스 번호 (Body에도 포함될 수 있음)\n\nHeaders:\n  Authorization=[string] - 인증 토큰 (예: Bearer token)\n\nSuccess Response:\n  Code: 200 OK\n  Content:{\n    \"seq\": [integer], // 댓글의 시퀀스 번호\n    \"message\": \"댓글을 성공적으로 등록했습니다 :D\"\n  }\nError Response:\n  Code: 400 BAD REQUEST\n  Content:{\n    \"error\": \"Invalid input\"\n  }\nOR\n  Code: 500 INTERNAL SERVER ERROR\n  Content:{\n    \"error\": \"Server error\"\n  }\n예시 Call:\naxios.post('http://localhost:8080/comment', {\n  id: 'user123',\n  content: '이것은 댓글입니다.',\n  BoardSeq: 42\n}, {\n  params: { BoardSeq: 42 },\n  headers: { Authorization: 'Bearer token' }\n});\n  \nNotes:\n댓글 생성 시 사용자 인증이 필요할 수 있음.\nBoardSeq는 URL 파라미터로도 전송되지만, 요청 본문에도 포함될 수 있음.\n서버는 성공적으로 댓글을 생성한 후, 생성된 댓글의 seq를 포함한 객체를 응답으로 반환해야 함.\n*/\n\nimport axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { HttpHeadersContext } from \"../context/HttpHeadersProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CommentWrite(props) {\n  _s();\n  const {\n    headers,\n    setHeaders\n  } = useContext(HttpHeadersContext);\n  const id = localStorage.getItem(\"id\");\n  const seq = props.seq;\n  const navigate = useNavigate();\n  const [content, setContent] = useState(\"\");\n  const chageContent = event => {\n    setContent(event.target.value);\n  };\n  const createComment = async () => {\n    const request = {\n      id: id,\n      // 로그인한 사용자의 아이디\n      content: content,\n      // 댓글 내용\n      BoardSeq: seq // 게시글 번호\n    };\n\n    await axios.post(`http://localhost:8080/comment`, request, {\n      params: {\n        BoardSeq: seq\n      },\n      headers: headers\n    }).then(response => {\n      console.log(\"[CommentWrite.js] createComment() success :D\");\n      console.log(response.data);\n      if (response.data.seq != null) {\n        alert(\"댓글을 성공적으로 등록했습니다 :D\");\n        navigate(0);\n      }\n    }).catch(err => {\n      console.log(\"[CommentWrite.js] createComment() error :<\");\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-1 d-flex justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/profile-placeholder.png\",\n          alt: \"\\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0\",\n          className: \"profile-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-7\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-id\",\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2 my-1 d-flex justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-secondary\",\n          onClick: createComment,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-comment-dots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), \" \\uB313\\uAE00 \\uCD94\\uAC00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-3 d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"col-10\",\n        rows: \"5\",\n        value: content,\n        onChange: chageContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CommentWrite, \"QrUhaXPi/a9c15aiNahJnB6i/3k=\", false, function () {\n  return [useNavigate];\n});\n_c = CommentWrite;\nexport default CommentWrite;\nvar _c;\n$RefreshReg$(_c, \"CommentWrite\");","map":{"version":3,"names":["axios","useContext","useState","useNavigate","HttpHeadersContext","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentWrite","props","_s","headers","setHeaders","id","localStorage","getItem","seq","navigate","content","setContent","chageContent","event","target","value","createComment","request","BoardSeq","post","params","then","response","console","log","data","alert","catch","err","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rows","onChange","_c","$RefreshReg$"],"sources":["/Users/Park/Desktop/PARD/SpringBootStudy/React&Springboot3/react/src/components/comment/CommentWrite.js"],"sourcesContent":["/*\nAPI 명세서: 댓글 생성\n\nURL: /comment\n\nMethod: POST\n\nURL Params:\n  Required: BoardSeq=[integer] - 게시글의 시퀀스 번호\n\nData Params:\n  id=[string] - 사용자 ID\n  content=[string] - 댓글 내용\n  BoardSeq=[integer] - 게시글의 시퀀스 번호 (Body에도 포함될 수 있음)\n\nHeaders:\n  Authorization=[string] - 인증 토큰 (예: Bearer token)\n\nSuccess Response:\n  Code: 200 OK\n  Content:{\n    \"seq\": [integer], // 댓글의 시퀀스 번호\n    \"message\": \"댓글을 성공적으로 등록했습니다 :D\"\n  }\nError Response:\n  Code: 400 BAD REQUEST\n  Content:{\n    \"error\": \"Invalid input\"\n  }\nOR\n  Code: 500 INTERNAL SERVER ERROR\n  Content:{\n    \"error\": \"Server error\"\n  }\n예시 Call:\naxios.post('http://localhost:8080/comment', {\n  id: 'user123',\n  content: '이것은 댓글입니다.',\n  BoardSeq: 42\n}, {\n  params: { BoardSeq: 42 },\n  headers: { Authorization: 'Bearer token' }\n});\n  \nNotes:\n댓글 생성 시 사용자 인증이 필요할 수 있음.\nBoardSeq는 URL 파라미터로도 전송되지만, 요청 본문에도 포함될 수 있음.\n서버는 성공적으로 댓글을 생성한 후, 생성된 댓글의 seq를 포함한 객체를 응답으로 반환해야 함.\n*/\n\nimport axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { HttpHeadersContext } from \"../context/HttpHeadersProvider\";\n\nfunction CommentWrite(props) {\n  const { headers, setHeaders } = useContext(HttpHeadersContext);\n\n  const id = localStorage.getItem(\"id\");\n  const seq = props.seq;\n\n  const navigate = useNavigate();\n\n  const [content, setContent] = useState(\"\");\n\n  const chageContent = (event) => {\n    setContent(event.target.value);\n  };\n\n  const createComment = async () => {\n    const request = {\n      id: id, // 로그인한 사용자의 아이디\n      content: content, // 댓글 내용\n      BoardSeq: seq, // 게시글 번호\n    };\n\n    await axios\n      .post(`http://localhost:8080/comment`, request, {\n        params: { BoardSeq: seq },\n        headers: headers,\n      })\n      .then((response) => {\n        console.log(\"[CommentWrite.js] createComment() success :D\");\n        console.log(response.data);\n\n        if (response.data.seq != null) {\n          alert(\"댓글을 성공적으로 등록했습니다 :D\");\n          navigate(0);\n        }\n      })\n      .catch((err) => {\n        console.log(\"[CommentWrite.js] createComment() error :<\");\n        console.log(err);\n      });\n  };\n\n  return (\n    <>\n      {/* 상단 영역 (프로필 이미지, 댓글 작성자) */}\n      <div className=\"my-1 d-flex justify-content-center\">\n        <div className=\"col-1\">\n          <img\n            src=\"/images/profile-placeholder.png\"\n            alt=\"프로필 이미지\"\n            className=\"profile-img\"\n          />\n        </div>\n\n        <div className=\"col-7\">\n          <span className=\"comment-id\">{id}</span>\n        </div>\n        <div className=\"col-2 my-1 d-flex justify-content-end\">\n          <button className=\"btn btn-outline-secondary\" onClick={createComment}>\n            <i className=\"fas fa-comment-dots\"></i> 댓글 추가\n          </button>\n        </div>\n      </div>\n      {/* 하단 영역 (댓글 내용) */}\n      <div className=\"my-3 d-flex justify-content-center\">\n        <textarea\n          className=\"col-10\"\n          rows=\"5\"\n          value={content}\n          onChange={chageContent}\n        ></textarea>\n      </div>\n      <br />\n      <br />\n    </>\n  );\n}\n\nexport default CommentWrite;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}